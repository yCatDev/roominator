@page "/login"
<div class="BluePrintWindow Scrollable">

    <img src="/images/logo/logo_shadow.png" alt="Roominator logo" class="AuthLogo">
    <p class="AuthTitle Unselectable">Вхід</p>

    <p class="AuthErrorMessage @MessageLine Unselectable">@ErrorMessage</p>

    <div class="Constructor AuthMainBlock">
        <div class="Constructor AuthSigns">
        </div>
        <div class="Constructor AuthForm">
            <div class="Constructor AuthFormLine">

                <button class="BlueButton AuthSocial">
                    <img src="/images/icons/login/google.png" alt="Google" class="AuthSocialIcon">| Google
                </button>
                <button class="BlueButton AuthSocial">
                    <img src="/images/icons/login/facebook.png" alt="Facebook" class="AuthSocialIcon">| Facebook
                </button>

            </div>

            <input type="email" placeholder="Пошта" id="SigninMail" class="AuthInput" @bind="email">
            <input type="password" placeholder="Пароль" id="SigninPassword" class="AuthInput" @bind="password">

            <div class="Constructor AuthFormLine">
                <button class="LinkButton" id="ForgetPass"> Забули пароль? </button>
                <button class="BlueButton @Processing" id="SigninButton" @onclick="Validate"> Вхід </button>
            </div>
        </div>
        <div class="Constructor AuthSigns">
            <img src="/images/icons/login/attention.png" alt="X" class="AuthWarningIcon @MailWarning" id="SigninMailWarning">
            <img src="/images/icons/login/attention.png" alt="X" class="AuthWarningIcon @PasswordWarning" id="SigninPassworfWarning">
        </div>

    </div>

    <a href="/register" class="LinkButton AuthFooter" >Немає аккаунту? Реєстрація</a>
</div>

@code{
    //========>  Вывод и анимация ошибок  <============//

    private string ErrorMessage = ""; //Сообщение ошибки
    //AuthCollapseLine - скрыть  // AuthExpandLine - показать
    //AuthCollapsedLine - начальное состояние / скрыто / без анимаций
    private string MessageLine = "AuthCollapsedLine"; //Состояние полосы

    //Show - показать // Hide-скрыть 
    //Hidden-начальное состояние / скрыто / без анимаций
    private string MailWarning = "Hidden"; //Иконка логина
    private string PasswordWarning = "Hidden"; //Иконка пароля

    //Для запуска анимации нужно присвоить соответствующее значени переменной
    //Меняйте текст ошибки ДО показа, и ПОСЛЕ скрытия

    //ButtonLoading - анимация загрузки 
    // <Пустая строка> / Visible - убрать анимацию
    private string Processing = " ";//Анимация загрузки кнопки

    private string email = "";
    private string password = "";
    private ValRes validationResult;

    private void HideEverything()
    {
        if (MailWarning == "Show")
            MailWarning = "Hide";
        if (PasswordWarning == "Show")
            PasswordWarning = "Hide";
        if (MessageLine == "AuthExpandLine")
            MessageLine = "AuthCollapseLine";
        ErrorMessage = "";
    }

    private async Task<bool> Validate()
    {
        HideEverything();
        Processing = "ButtonLoading";
        validationResult = new ValRes(password, "", email);
        if (await validationResult.IsEverythingCorrect())
        {
            Processing = "";

            //if (await validationResult.CheckPremium())
            //{
            //    Program.havePremium = true;
            //}
            //else
            //{
            //    Program.havePremium = false;
            //}

            //Вход
            return true;
        } else
        {
            if (!validationResult.GetCorrectEmail())
            {
                ErrorMessage = "Не існує користувача з такою електронною поштою";
                MailWarning = "Show";
                MessageLine = "AuthExpandLine";
            }
            else
            {
                if (!validationResult.GetCorrectPassword())
                {
                    ErrorMessage = "Невірний пароль";
                    PasswordWarning = "Show";
                    MessageLine = "AuthExpandLine";
                }
            }
            Processing = "";
            return false;
        }
    }
}