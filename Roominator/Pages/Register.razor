@page "/register"
    <div class="BluePrintWindow Scrollable">

        <img src="/images/logo/logo_shadow.png" alt="Roominator logo" class="AuthLogo">
        <p class="AuthTitle Unselectable">Реєстрація</p>

        <p class="AuthErrorMessage @MessageLine Unselectable">@ErrorMessage</p>

        <div class="Constructor AuthMainBlock">
            <div class="Constructor AuthSigns">
            </div>
            <div class="Constructor AuthForm">
                <div class="Constructor AuthFormLine">
                    <button class="BlueButton AuthSocial">
                        <img src="/images/icons/login/google.png" alt="Google" class="AuthSocialIcon">| Google
                    </button>
                    <button class="BlueButton AuthSocial">
                        <img src="/images/icons/login/facebook.png" alt="Facebook" class="AuthSocialIcon">| Facebook
                    </button>
                </div>

                <input type="email" placeholder="Пошта" id="SignupMail" class="AuthInput" @bind="email">
                <input type="password" placeholder="Пароль" id="SignupPassword" class="AuthInput" @bind="password">
                <input type="password" placeholder="Повтор паролю" id="SignupConfirmPassword" class="AuthInput" @bind="password_copy">

                <div class="Constructor AuthFormLine">
                    <p class="AuthCheckboxText"><input type="checkbox" value="agree" name="TermsAgree" id="TermsAgree" @bind="checkboxValue"> Я погоджуюсь з умовами </p>
                    <button class="BlueButton btn @Processing" id="SignupButton" @onclick="Validate"> Реєстрація </button>
                </div>
            </div>
            <div class="Constructor AuthSigns">
                <img src="/images/icons/login/attention.png" alt="X" class="AuthWarningIcon @MailWarning" id="SignupMailWarning">
                <img src="/images/icons/login/attention.png" alt="X" class="AuthWarningIcon @PasswordWarning" id="SignupPassworfWarning">
                <img src="/images/icons/login/attention.png" alt="X" class="AuthWarningIcon @ConfirmPasswordWarning" id="SignupConfirmPasswordWarning">
            </div>
        </div>

        <a href="/login" class="LinkButton AuthFooter">Є аккаунт? Вхід</a>
    </div>
    @code{
        //========>  Вывод и анимация ошибок  <============//

        private string ErrorMessage = ""; //Сообщение ошибки
                                          //AuthCollapseLine - скрыть  // AuthExpandLine - показать
                                          //AuthCollapsedLine - начальное состояние / скрыто / без анимаций
        private string MessageLine = "AuthCollapsedLine"; //Состояние полосы

        //Show - показать // Hide-скрыть
        //Hidden-начальное состояние / скрыто / без анимаций
        private string MailWarning = "Hidden"; //Иконка логина
        private string PasswordWarning = "Hidden"; //Иконка пароля
        private string ConfirmPasswordWarning = "Hidden"; //Иконка подтверждения

        //ButtonLoading - анимация загрузки
        // <Пустая строка> / Visible - убрать анимацию
        private string Processing = " ";//Анимация загрузки кнопки

        //Для запуска анимации нужно присвоить соответствующее значени переменной
        //Меняйте текст ошибки ДО показа, и ПОСЛЕ скрытия

        private bool checkboxValue;

        private string email = "";
        private string password = "";
        private string password_copy = "";
        private ValRes validationResult;
        private RegistrationErrors error;
        private Authorization authorization;


        async private Task<bool> Validate()
        {
            HideEverything();
            Processing = "ButtonLoading";
            validationResult = new ValRes(password, password_copy, email);
            error = await validationResult.Validate();
            switch (error)
            {
                case RegistrationErrors.EmailIsEmpty:
                    ErrorMessage = "Введіть адрес електронної пошти";
                    ShowEmailIconWarning();
                    break;
                case RegistrationErrors.EmailAlreadyExists:
                    ErrorMessage = "Аккаунт з даною електронною поштою вже існує";
                    ShowEmailIconWarning();
                    break;
                case RegistrationErrors.EmailFormat:
                    ErrorMessage = "Невірний формат електронної пошти";
                    ShowEmailIconWarning();
                    break;
                case RegistrationErrors.PasswordIsEmpty:
                    ErrorMessage = "Введіть пароль";
                    ShowPasswordIconWarning();
                    break;
                case RegistrationErrors.PasswordLengthTooShort:
                    ErrorMessage = "Пароль повинен містити не менше 8 символів";
                    ShowPasswordIconWarning();
                    break;
                case RegistrationErrors.PasswordLengthTooLong:
                    ErrorMessage = "Пароль повинен містити не більше 50 символів";
                    ShowPasswordIconWarning();
                    break;
                case RegistrationErrors.PasswordEqualsEmail:
                    ErrorMessage = "Пароль не повинен співпадати з електронною поштою";
                    ShowPasswordIconWarning();
                    break;
                case RegistrationErrors.PasswordCopyNotEqualsPassword:
                    ErrorMessage = "Паролі не співпадають";
                    ShowConfirmPasswordIconWarning();
                    break;
                case RegistrationErrors.PasswordCopyIsEmpty:
                    ErrorMessage = "Підтвердіть пароль";
                    ShowConfirmPasswordIconWarning();
                    break;
                case RegistrationErrors.Correct:
                    Processing = "";
                    if (checkboxValue)
                    {
                        RegisterProcess();
                    }
                    else
                    {
                        ErrorMessage = "Ви маєте прийняти умови";
                        MessageLine = "AuthExpandLine";
                    }
                    return true;
            }
            Processing = "";
            return false;
        }

        private void ShowEmailIconWarning()
        {
            MailWarning = "Show";
            MessageLine = "AuthExpandLine";
        }

        private void ShowConfirmPasswordIconWarning()
        {
            ConfirmPasswordWarning = "Show";
            MessageLine = "AuthExpandLine";
        }

        private void ShowPasswordIconWarning()
        {
            PasswordWarning = "Show";
            MessageLine = "AuthExpandLine";
        }

        private void HideEverything()
        {
            if (MailWarning == "Show")
                MailWarning = "Hide";
            if (PasswordWarning == "Show")
                PasswordWarning = "Hide";
            if (ConfirmPasswordWarning == "Show")
                ConfirmPasswordWarning = "Hide";
            if (MessageLine == "AuthExpandLine")
                MessageLine = "AuthCollapseLine";
            ErrorMessage = "";
        }

        private async void RegisterProcess()
        {
            authorization = new Authorization(password, password_copy, email);
            if (await authorization.Register())
            {
                Program.currentEmail = authorization.GetEmail();
                //Program.havePremium = false;
                //Регистрация успешна
            }
        }
    }
