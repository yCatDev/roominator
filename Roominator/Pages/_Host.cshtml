@page "/"
@namespace Roominator.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Roominator</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link media="(orientation: landscape)" href="css/site.css" rel="stylesheet" />
    <link media="(orientation: portrait)" href="css/mobile.css" rel="stylesheet" />
    <link href="Roominator.styles.css" rel="stylesheet" />
    <meta name="google-site-verification" content="D4OqqnbVUd4jcUIT4W3btCHhMiBjlln9EMg_JvoZYKY" />
   
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>


     <script src="_framework/blazor.server.js" autostart="false"></script>
         <script>
         var DotNetBridge = null;
             function start() {
                 Blazor.start({ })
                     .then(() => {                       
                      window.saveCurrentRoom = function(userId, json)
                      {
                          console.log(userId);
                          console.log(json);
                          DotNet.invokeMethodAsync('Roominator', 'SaveUserRoom', userId, json);
                      }
                      
                      window.loadCurrentRoom = async function (unityInstance)
                      {
                          let userId = await DotNet.invokeMethodAsync('Roominator', 'GetSelectedUserID');
                          console.log(userId);
                          unityInstance.SendMessage('SaveManager', 'SetUser', userId);
                          let json = await DotNet.invokeMethodAsync('Roominator', 'GetGeneratedUserRoom');
                          console.log(json);
                          unityInstance.SendMessage('SaveManager', 'LoadRoom', json);
                      }
                                  
                     });
             }
             start();
               function RedirectTo(path) {
                     window.location = path;
                   
                 }
         </script>
<script src="js/DesignerBridge.js"></script>
    <script>
        function saveAsFile(filename, bytesBase64) {
            var link = document.createElement('a');
            link.download = filename;
            link.href = "data:application/octet-stream;base64," + bytesBase64;
            document.body.appendChild(link); // Needed for Firefox
            link.click();
            document.body.removeChild(link);
        }
    </script>
</body>
</html>
